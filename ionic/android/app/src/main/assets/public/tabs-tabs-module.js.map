{"version":3,"sources":["webpack:///./src/app/about/about.module.ts","webpack:///./src/app/about/about.page.html","webpack:///./src/app/about/about.page.scss","webpack:///./src/app/about/about.page.ts","webpack:///./src/app/api/api.service.ts","webpack:///./src/app/api/device.service.ts","webpack:///./src/app/api/notify.service.ts","webpack:///./src/app/contact/contact.module.ts","webpack:///./src/app/contact/contact.page.html","webpack:///./src/app/contact/contact.page.scss","webpack:///./src/app/contact/contact.page.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts","webpack:///./src/app/tabs/tabs.module.ts","webpack:///./src/app/tabs/tabs.page.html","webpack:///./src/app/tabs/tabs.page.scss","webpack:///./src/app/tabs/tabs.page.ts","webpack:///./src/app/tabs/tabs.router.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA6C;AACE;AACN;AACM;AACF;AACJ;AAWzC;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qDAAS,EAAE,CAAC,CAAC;aAC5D;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AChB5B,oJ;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAAA;IAAwB,CAAC;IAAZ,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPqB;AACoB;AAW/D;IAGE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QADpC,aAAQ,GAAW,qBAAqB,CAAC;IAGzC,CAAC;IAEK,8BAAS,GAAf;;;;4BACS,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE;4BAA3D,sBAAO,SAAoD,EAAC;;;;KAC7D;IAEK,gCAAW,GAAjB;;;;4BACS,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,SAAS,EAAE;4BAAtE,sBAAO,SAA+D,EAAC;;;;KACxE;IAEK,oCAAe,GAArB,UAAsB,IAAI,EAAE,QAAQ;;;;4BAC3B,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,GAAG,gBAAgB,GAAG,IAAI,GAAG,YAAY,GAAG,QAAQ,CAAC,CAAC,SAAS,EAAE;4BAAjH,sBAAO,SAA0G,EAAC;;;;KACnH;IAEK,sCAAiB,GAAvB,UAAwB,IAAY;;;;4BAC3B,qBAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,GAAG,mBAAmB,GAAG,IAAI,CAAC,CAAC,SAAS,EAAE;4BAA1F,sBAAO,SAAmF,EAAC;;;;KAC5F;IArBU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,UAAU,CAsBtB;IAAD,iBAAC;CAAA;AAtBsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ0C;AACtB;AACD;AAC0B;AAQpE;IACI,uBACY,aAA4B,EAC5B,QAAkB,EAClB,cAA8B;QAF9B,kBAAa,GAAb,aAAa,CAAe;QAC5B,aAAQ,GAAR,QAAQ,CAAU;QAClB,mBAAc,GAAd,cAAc,CAAgB;IAE1C,CAAC;IACD,uCAAuC;IACjC,gCAAQ,GAAd;;;;;6BACQ,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAA1B,wBAA0B;wBACnB,qBAAM,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE;4BAAtC,sBAAO,SAA+B;4BAE/B,qBAAM,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;4BAAnC,sBAAO,SAA4B,EAAC;;;;KAE3C;IACK,kCAAU,GAAhB;;;;;6BACQ,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAA1B,wBAA0B;wBACnB,qBAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,CAAC;4BAAlD,sBAAO,SAAuD;;wBAE9D,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;4BAClC,MAAM,gBAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAa,EAAC;wBACnE,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,MAAM,gBAAC,EAAE,EAAC;wBACd,CAAC;;;;;;KAER;IACK,yCAAiB,GAAvB,UAAwB,MAAc;;;;;4BACpB,qBAAM,IAAI,CAAC,UAAU,EAAE;;wBAAjC,OAAO,GAAG,SAAuB;wBACjC,MAAM,GAAW,OAAO,CAAC,IAAI,CAAC,UAAC,MAAc;4BAC7C,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;gCACzB,MAAM,CAAC,IAAI,CAAC;4BAChB,CAAC;4BACD,MAAM,CAAC,KAAK,CAAC;wBACjB,CAAC,CAAC,CAAC;wBACH,sBAAO,MAAM,EAAC;;;;KACjB;IACK,kCAAU,GAAhB,UAAiB,OAAiB;;;;;6BAC1B,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAA1B,wBAA0B;wBAC1B,qBAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;;wBAApD,SAAoD,CAAC;;;wBAErD,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;;;;;;KAGhE;IACK,uCAAe,GAArB,UAAsB,GAAW,EAAE,MAAc,EAAE,IAAY;;;;;4BAC7C,qBAAM,IAAI,CAAC,UAAU,EAAE;;wBAAjC,OAAO,GAAG,SAAuB;wBACrC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,MAAc;4BACjC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;gCACvB,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,CAAS;oCAC5C,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;wCAChB,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;oCACtB,CAAC;oCACD,MAAM,CAAC,CAAC,CAAC;gCACb,CAAC,CAAC;4BACN,CAAC;4BACD,MAAM,CAAC,MAAM,CAAC;wBAClB,CAAC,CAAC;wBACF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;;;;KAC5B;IACK,4CAAoB,GAA1B,UAA2B,IAAI;;;;;4BACb,qBAAM,IAAI,CAAC,UAAU,EAAE;;wBAAjC,OAAO,GAAG,SAAuB;wBACrC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,MAAc;4BACjC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gCAC5B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;4BAC1B,CAAC;4BACD,MAAM,CAAC,MAAM,CAAC;wBAClB,CAAC,CAAC;wBACF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;;;;KAC5B;IACK,oCAAY,GAAlB,UAAmB,IAAI;;;;;4BACL,qBAAM,IAAI,CAAC,UAAU,EAAE;;wBAAjC,OAAO,GAAG,SAAuB;wBACrC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,MAAc;4BACjC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gCAC5B,IAAI,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;gCACxD,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;gCACzC,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;oCACpD,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;gCAC1B,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACJ,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;gCACzB,CAAC;gCACD,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;gCACrB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAW;oCAC1B,IAAI,MAAM,GAAW;wCACjB,QAAQ,EAAE,GAAG,CAAC,MAAM;wCACpB,KAAK,EAAE,GAAG,CAAC,GAAG;qCACjB;oCACD,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gCACjC,CAAC,CAAC;4BAEN,CAAC;4BACD,MAAM,CAAC,MAAM,CAAC;wBAClB,CAAC,CAAC;wBACF,qBAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;;wBAA9B,SAA8B,CAAC;;;;;KAClC;IACK,iCAAS,GAAf,UAAgB,MAAc;;;;;4BACF,qBAAM,IAAI,CAAC,UAAU,EAAE;;wBAA3C,OAAO,GAAa,SAAuB;wBAC/C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;6BACjB,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAA1B,wBAA0B;wBACnB,qBAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;4BAA3D,sBAAO,SAAoD;4BAE3D,sBAAO,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAC;;;;KAEvE;IACK,oCAAY,GAAlB,UAAmB,YAAoB;;;;;4BACrB,qBAAM,IAAI,CAAC,UAAU,EAAE;;wBAAjC,OAAO,GAAG,SAAuB;wBACrC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAC,MAAc;4BACpC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;gCACpC,MAAM,CAAC,KAAK,CAAC;4BACjB,CAAC;4BACD,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC,CAAC;wBACF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;;;;KAC5B;IAhHQ,aAAa;QAHzB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAG6B,8EAAa;YAClB,uDAAQ;YACF,iFAAc;OAJjC,aAAa,CAiHzB;IAAD,oBAAC;CAAA;AAjHyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiB;AACD;AAEO;AAKjD;IACI,uBACY,eAAgC,EAChC,QAAkB;QADlB,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAU;IAC9B,CAAC;IAEK,iCAAS,GAAf,UAAgB,GAAW,EAAE,QAAqB;QAArB,wCAAqB;;;;;4BAChC,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC5C,MAAM,EAAE,OAAO;4BACf,SAAS,EAAE,QAAQ;4BACnB,OAAO,EAAE,GAAG;yBACf,CAAC;;wBAJI,KAAK,GAAG,SAIZ;wBAEF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;wBAEtB,UAAU,CAAC;4BACP,KAAK,CAAC,OAAO,EAAE,CAAC;wBACpB,CAAC,EAAE,IAAI,CAAC;;;;;KACX;IAlBQ,aAAa;QAHzB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAG+B,8DAAe;YACtB,uDAAQ;OAHrB,aAAa,CAoBzB;IAAD,oBAAC;CAAA;AApByB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRmB;AACE;AACN;AACM;AACF;AACA;AAW7C;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,yDAAW,EAAE,CAAC,CAAC;aAC9D;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;AChB9B,wX;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAAA;IAA0B,CAAC;IAAd,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPqB;AACE;AACN;AACM;AACF;AACN;AAWvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mDAAQ,EAAE,CAAC,CAAC;aAC3D;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;AChB3B,uKAAuK,SAAS,wIAAwI,+MAA+M,aAAa,4SAA4S,kBAAkB,2BAA2B,aAAa,kCAAkC,2BAA2B,2YAA2Y,65BAA65B,iBAAiB,snCAAsnC,kBAAkB,wBAAwB,iBAAiB,uBAAuB,iBAAiB,6YAA6Y,WAAW,0CAA0C,WAAW,MAAM,UAAU,iI;;;;;;;;;;;ACAt6H,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACR;AACQ;AACD;AAED;AACK;AACC;AAItD,IAAI,MAAM,GAAG,IAAI,CAAC;AAElB,IAAI,iBAAiB,GAAG,IAAI,CAAC;AAO7B;IAUE,8CAA8C;IAC9C,sDAAsD;IACtD,mCAAmC;IACnC,wCAAwC;IAExC,kBACU,QAAkB,EAClB,IAAgB,EAChB,GAAe,EAChB,eAAgC,EAC/B,aAA4B,EAC5B,aAA4B;QAL5B,aAAQ,GAAR,QAAQ,CAAU;QAClB,SAAI,GAAJ,IAAI,CAAY;QAChB,QAAG,GAAH,GAAG,CAAY;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAC/B,kBAAa,GAAb,aAAa,CAAe;QAC5B,kBAAa,GAAb,aAAa,CAAe;QAnBtC,YAAO,GAAW,MAAM,CAAC;QACzB,kBAAa,GAAY,KAAK,CAAC;QAC/B,iBAAY,GAAW,EAAE,CAAC;QAE1B,YAAO,GAAa,EAAE,CAAC;QACvB,qBAAgB,GAAY,KAAK,CAAC;QAClC,SAAI,GAAW,QAAQ,CAAC;QACxB,sBAAiB,GAAY,KAAK,CAAC;IAYO,CAAC;IAE3C,2BAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACzB,KAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC;YAChC,oCAAoC;YACpC,KAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,sCAAmB,GAAnB,UAAoB,GAAG;QAAvB,iBAmCC;QAlCC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QAEnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,GAAG,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAC;YAChD,oBAAoB;YACpB,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAC,KAAK;gBACpC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;gBAChC,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE;gBAC/B,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC7B,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,sBAAsB;YACtB,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAO,KAAK;;;;;4BAEzC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;4BACjC,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,CAAC,CAAC;iCACrC,IAAG,CAAC,IAAI,KAAK,2BAA2B,GAAxC,wBAAwC;4BAC1C,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;;;iCACpB,IAAG,CAAC,IAAI,KAAK,uBAAuB,GAApC,wBAAoC;4BAC7C,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;;;iCAChD,IAAG,CAAC,IAAI,KAAK,kBAAkB,GAA/B,wBAA+B;4BACxC,qBAAM,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC;;4BAAvE,SAAuE,CAAC;4BACxE,SAAI;4BAAW,qBAAM,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;;4BAApD,GAAK,OAAO,GAAG,SAAqC,CAAC;4BACrD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC;;;;;iBAEhE,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IACK,4BAAS,GAAf,UAAgB,CAAS,EAAE,CAAS;;;;;;wBAClC,SAAI,CAAC,mBAAmB;;4BACtB,IAAI,EAAE,iBAAiB;4BACvB,IAAI,EAAE,CAAC,CAAC,IAAI;4BACZ,GAAG,EAAE,CAAC,CAAC,GAAG;4BACV,MAAM,EAAE,CAAC;;wBACD,qBAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;;wBAL7C,aAAI,IAKF,SAAM,GAAE,SAAmC;qCAC3C;;;;;KACH;IACK,2BAAQ,GAAd,UAAe,CAAS,EAAE,CAAS;;;;;;wBACjC,SAAI,CAAC,mBAAmB;;4BACtB,IAAI,EAAE,iBAAiB;4BACvB,IAAI,EAAE,CAAC,CAAC,IAAI;4BACZ,GAAG,EAAE,CAAC,CAAC,GAAG;4BACV,MAAM,EAAE,CAAC;;wBACD,qBAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;;wBAL7C,aAAI,IAKF,SAAM,GAAE,SAAmC;qCAC3C;;;;;KACH;IACK,qCAAkB,GAAxB,UAAyB,IAAI;;;;;;6BACvB,IAAI,CAAC,KAAK,EAAV,wBAAU;wBACZ,qBAAM,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;;wBAA3C,SAA2C,CAAC;;4BAE5C,qBAAM,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC;;wBAAnD,SAAmD,CAAC;;;wBAEtD,SAAI;wBAAW,qBAAM,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;;wBAApD,GAAK,OAAO,GAAG,SAAqC,CAAC;;;;;KACtD;IACK,sCAAmB,GAAzB;;;;;;wBACE,SAAI;wBAAW,qBAAM,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;;wBAApD,GAAK,OAAO,GAAG,SAAqC,CAAC;wBACrD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC5B,IAAI,CAAC,wBAAwB,EAAE,CAAC;wBAClC,CAAC;;;;;KACF;IACD,gCAAa,GAAb,UAAc,MAAc;QAC1B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IACD,gCAAa,GAAb,UAAc,CAAS;QACrB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IACf,CAAC;IACK,+BAAY,GAAlB,UAAmB,MAAc;;;gBAC/B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBACxC,IAAI,CAAC,mBAAmB,EAAE,CAAC;;;;KAC5B;IACD,6BAAU,GAAV;QACE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG;YAChB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,KAAK;SACb;QACD,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IACD,4CAAyB,GAAzB;QAAA,iBAqBC;QApBC,EAAE,CAAC,CAAC,iBAAiB,CAAC;YACpB,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACnC,iBAAiB,GAAG,WAAW,CAAC;;;;;;wBAE5B,SAAI;wBAAc,qBAAM,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE;;wBAA5C,GAAK,UAAU,GAAG,SAA0B,CAAC;wBAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;4BACpC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,KAAK,CAAC;wBAChC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;wBAC/B,CAAC;wBACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBAC7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;wBAC9B,aAAa,CAAC,iBAAiB,CAAC,CAAC;wBACjC,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;;;;wBAExB,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC;wBACd,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;;;;;aAGhC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IACK,8BAAW,GAAjB;;;gBACE,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;gBAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC;;;;KAC9B;IACK,gCAAa,GAAnB,UAAoB,IAAY;;;;;;;wBAE5B,qBAAM,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC;;wBAAtC,SAAsC,CAAC;wBAClC,qBAAM,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;;wBAArE,EAAE,CAAC,CAAC,CAAC,UAAgE,EAAC,CAAC,CAAC;4BAClE,SAAS,GAAW;gCACtB,IAAI,EAAE,IAAI;gCACV,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;gCAChC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;gCAC1B,GAAG,EAAE,CAAC;gCACN,MAAM,EAAE,KAAK;gCACb,QAAQ,EAAE,EAAE;6BACb,CAAC;4BACF,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;wBAC1C,CAAC;wBACD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;wBACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;;;;wBAEhB,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;wBACf,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;;;;;;KAE7D;IAEK,2BAAQ,GAAd;;;;;;;wBAEI,SAAI;wBAAgB,qBAAM,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;;wBAAhD,GAAK,YAAY,GAAG,SAA4B,CAAC;wBACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;;;wBAE/B,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC;wBACd,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;;;;;;KAEhC;IACK,8BAAW,GAAjB;;;;gBACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAO,MAAM;;;;;gCAChC,SAAI,CAAC,mBAAmB;;oCACtB,IAAI,EAAE,qBAAqB;oCAC3B,IAAI,EAAE,MAAM,CAAC,IAAI;;gCACT,qBAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE;;gCAH7C,aAAI,IAGF,SAAM,GAAE,SAAmC;6CAC3C,CAAC;;;;qBACJ,CAAC,CAAC;;;;KACJ;IACK,2CAAwB,GAA9B;;;;gBACE,UAAU,CAAC;;wBACT,IAAI,CAAC,WAAW,EAAE,CAAC;wBACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;wBACpC,IAAI,CAAC,wBAAwB,EAAE,CAAC;;;qBACjC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,gFAAgF;;;;KAChI;IACK,kCAAe,GAArB,UAAsB,IAAI;;;;;;4BACV,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,MAAM,EAAE,qBAAqB;4BAC7B,MAAM,EAAE;gCACN;oCACE,IAAI,EAAE,UAAU;oCAChB,IAAI,EAAE,MAAM;iCACb;6BACF;4BACD,OAAO,EAAE;gCACP;oCACE,IAAI,EAAE,QAAQ;oCACd,IAAI,EAAE,QAAQ;oCACd,QAAQ,EAAE,WAAW;iCACtB,EAAE;oCACD,IAAI,EAAE,IAAI;oCACV,OAAO,EAAE,UAAO,IAAI;;;;;oDAClB,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;oDACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oDAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;oDAErB,qBAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC;;oDAAxD,SAAwD,CAAC;;;;oDAEzD,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;;;oDAEjB,IAAI,CAAC,wBAAwB,EAAE,CAAC;oDAChC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;;;;yCACtB;iCACF;6BACF;yBACF,CAAC;;wBA7BI,KAAK,GAAG,SA6BZ;wBAEF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAnOU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAiBoB,uDAAQ;YACZ,+DAAU;YACX,2DAAU;YACC,8DAAe;YAChB,iEAAa;YACb,iEAAa;OArB3B,QAAQ,CAoOpB;IAAD,eAAC;CAAA;AApOoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBwB;AAEJ;AACM;AACF;AAEgB;AAEtB;AACuB;AACN;AACH;AAcrD;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAZ1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,yEAAqB;gBACrB,gEAAc;gBACd,mEAAe;gBACf,yEAAiB;aAClB;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3B,wf;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAAA;IAAuB,CAAC;IAAX,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,QAAQ,CAAG;IAAD,eAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPoB;AACc;AAEhB;AACM;AACG;AACM;AAEtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,mDAAQ;QACnB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,wDAAQ;aACpB;YACD;gBACE,IAAI,EAAE,OAAO;gBACb,MAAM,EAAE,OAAO;gBACf,SAAS,EAAE,2DAAS;aACrB;YACD;gBACE,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,SAAS;gBACjB,SAAS,EAAE,iEAAW;aACvB;SACF;KACF;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,mBAAmB;QAC/B,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH","file":"tabs-tabs-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AboutPage } from './about.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: AboutPage }])\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>About</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content></ion-content>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: 'about.page.html',\n  styleUrls: ['about.page.scss']\n})\nexport class AboutPage {}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Ping, Wifi } from \"./api\"\r\n\r\nexport interface Message {\r\n  author: string,\r\n  message: string\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApiService {\r\n\r\n  base_url: string = \"http://192.168.4.1/\";\r\n  constructor(private http: HttpClient) {\r\n  \r\n  }\r\n\r\n  async checkPing() {\r\n    return await this.http.get<Ping>(this.base_url).toPromise();\r\n  }\r\n\r\n  async getScanWifi() {\r\n    return await this.http.get<Wifi[]>(this.base_url + \"wifi\").toPromise();\r\n  }\r\n\r\n  async setWifiPassword(ssid, password) {\r\n    return await this.http.get<Wifi[]>(this.base_url + \"wifisave?SSID=\" + ssid + \"&password=\" + password).toPromise();\r\n  }\r\n\r\n  async setDeviceNickName(name: String) {\r\n    return await this.http.get<Wifi[]>(this.base_url + \"setnickname?name=\" + name).toPromise();\r\n  }\r\n}\r\n","import { NativeStorage } from '@ionic-native/native-storage/ngx';\r\nimport { Injectable } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { UniqueDeviceID } from '@ionic-native/unique-device-id/ngx';\r\n\r\nimport { Device, Switch } from \"./api\"\r\nimport { stat } from 'fs';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class DeviceService {\r\n    constructor(\r\n        private nativeStorage: NativeStorage,\r\n        private platform: Platform,\r\n        private uniqueDeviceID: UniqueDeviceID) {\r\n\r\n    }\r\n    //random id to identify the current app\r\n    async getAppID() {\r\n        if (this.platform.is(\"mobile\")) {\r\n            return await this.uniqueDeviceID.get()\r\n        } else {\r\n            return await Promise.resolve(\"!23\");;\r\n        }\r\n    }\r\n    async getDevices(): Promise<Device[]> {\r\n        if (this.platform.is(\"mobile\"))\r\n            return await this.nativeStorage.getItem('devices') as Device[]\r\n        else {\r\n            if (localStorage.getItem('devices')) {\r\n                return JSON.parse(localStorage.getItem('devices')) as Device[];\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n    async checkDeviceExists(chipid: String) {\r\n        let devices = await this.getDevices();\r\n        let device: Device = devices.find((device: Device) => {\r\n            if (device.chip === chipid) {\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return device;\r\n    }\r\n    async setDevices(devices: Device[]) {\r\n        if (this.platform.is(\"mobile\"))\r\n            await this.nativeStorage.setItem('devices', devices);\r\n        else {\r\n            localStorage.setItem('devices', JSON.stringify(devices));\r\n\r\n        }\r\n    }\r\n    async updateDevicePin(pin: number, status: number, chip: string) {\r\n        let devices = await this.getDevices();\r\n        devices = devices.map((device: Device) => {\r\n            if (device.chip === chip) {\r\n                device.switches = device.switches.map((s: Switch) => {\r\n                    if (s.pin === pin) {\r\n                        s.status = status;\r\n                    }\r\n                    return s;\r\n                })\r\n            }\r\n            return device;\r\n        })\r\n        this.setDevices(devices);\r\n    }\r\n    async updateDeviceNotFound(data) {\r\n        let devices = await this.getDevices();\r\n        devices = devices.map((device: Device) => {\r\n            if (device.chip === data.chip) {\r\n                device.online = false;\r\n            }\r\n            return device;\r\n        })\r\n        this.setDevices(devices);\r\n    }\r\n    async updateDevice(data) {\r\n        let devices = await this.getDevices();\r\n        devices = devices.map((device: Device) => {\r\n            if (device.chip === data.chip) {\r\n                let offset = new Date().getTimezoneOffset() * 60 * 1000;\r\n                device.ttl = data.time * 1 + offset * -1;\r\n                if (device.ttl < new Date().getTime() - 5 * 60 * 1000) {\r\n                    device.online = false;\r\n                } else {\r\n                    device.online = true;\r\n                }\r\n                device.switches = [];\r\n                data.pins.forEach((pin: Switch) => {\r\n                    let swtich: Switch = {\r\n                        \"status\": pin.status,\r\n                        \"pin\": pin.pin\r\n                    }\r\n                    device.switches.push(swtich);\r\n                })\r\n\r\n            }\r\n            return device;\r\n        })\r\n        await this.setDevices(devices);\r\n    }\r\n    async addDevice(device: Device) {\r\n        let devices: Device[] = await this.getDevices();\r\n        devices.push(device);\r\n        if (this.platform.is(\"mobile\")) {\r\n            return await this.nativeStorage.setItem(\"devices\", devices)\r\n        } else {\r\n            return localStorage.setItem('devices', JSON.stringify(devices));\r\n        }\r\n    }\r\n    async deleteDevice(deleteDevice: Device) {\r\n        let devices = await this.getDevices();\r\n        devices = devices.filter((device: Device) => {\r\n            if (device.chip === deleteDevice.chip) {\r\n                return false;\r\n            }\r\n            return true;\r\n        })\r\n        this.setDevices(devices);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\n\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class NotifyService {\r\n    constructor(\r\n        private alertController: AlertController,\r\n        private platform: Platform) {\r\n    }\r\n\r\n    async alertUser(msg: string, subtitle: string = \"\") {\r\n        const alert = await this.alertController.create({\r\n            header: 'Alert',\r\n            subHeader: subtitle,\r\n            message: msg\r\n        });\r\n\r\n        await alert.present();\r\n\r\n        setTimeout(() => {\r\n            alert.dismiss();\r\n        }, 1000)\r\n    }\r\n\r\n}","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ContactPage } from './contact.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: ContactPage }])\n  ],\n  declarations: [ContactPage]\n})\nexport class ContactPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Contact\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header>Follow us on Twitter</ion-list-header>\\n    <ion-item>\\n      <ion-icon name=\\\"logo-ionic\\\" slot=\\\"start\\\"></ion-icon>\\n      @ionicframework\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: 'contact.page.html',\n  styleUrls: ['contact.page.scss']\n})\nexport class ContactPage {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([{ path: '', component: HomePage }])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Home</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <div>\\n    Platform: {{message}}\\n  </div>\\n\\n  <div *ngIf=\\\"mode === 'device'\\\">\\n\\n    <div *ngIf=\\\"devices.length\\\">\\n      <ion-card *ngFor=\\\"let device of devices; trackBy: trackByDevice\\\">\\n        <!-- <ion-img src=\\\"/assets/myImg.png\\\"></ion-img> -->\\n\\n        <ion-card-content>\\n          <ion-card-title>\\n              <ion-item>\\n                  <ion-label>{{device.name}}</ion-label>\\n                  <ion-button (click)=\\\"deleteDevice(device)\\\" fill=\\\"outline\\\" slot=\\\"end\\\">\\n                    <ion-icon name=\\\"trash\\\"></ion-icon>\\n                  </ion-button>\\n                </ion-item>\\n          </ion-card-title>\\n\\n          \\n\\n          <p>Device ID: {{device.device_id}}</p>\\n          <p>CHIP: {{device.chip}}</p>\\n          <p>Last Online: {{device.ttl | date:'short'}}</p>\\n          <p>\\n            <ion-badge *ngIf=\\\"device.online\\\" color=\\\"secondary\\\">Online</ion-badge>\\n            <ion-badge *ngIf=\\\"!device.online\\\" color=\\\"warning\\\">Offline</ion-badge>\\n          </p>\\n\\n\\n          <p *ngIf=\\\"device.switches.length > 0\\\"> Switches In Device </p>\\n          <ion-toolbar>\\n            <ion-buttons slot=\\\"start\\\" *ngFor=\\\"let switch of device.switches; trackBy: trackBySwitch\\\">\\n                <ion-button slot=\\\"icon-only\\\" (click)=\\\"switchOn(switch,device)\\\" *ngIf=\\\"switch.status === 0\\\" color=\\\"medium\\\">\\n                  <ion-icon name=\\\"power\\\"></ion-icon>\\n                </ion-button>\\n                <ion-button slot=\\\"icon-only\\\" (click)=\\\"switchOff(switch,device)\\\" *ngIf=\\\"switch.status === 1\\\" color=\\\"dark\\\">\\n                  <ion-icon name=\\\"power\\\"></ion-icon>\\n                </ion-button>\\n            </ion-buttons>\\n          </ion-toolbar>\\n          \\n        </ion-card-content>\\n      </ion-card>\\n    </div>\\n\\n    <div *ngIf=\\\"!devices.length\\\">\\n      No Devices Found!\\n    </div>\\n\\n\\n\\n    <ion-button (click)=\\\"scanDevice()\\\" color=\\\"primary\\\">Scan For devices</ion-button>\\n\\n  </div>\\n  <div *ngIf=\\\"mode === 'discovery'\\\">\\n      \\n      <div *ngIf=\\\"!devicePing.isNew\\\">\\n        This device was configured previously with name <b>{{devicePing.name}}</b> \\n        <br/>\\n        Do you want keep this name or change it?\\n        <br/>\\n        <ion-button (click)=\\\"setDeviceName(devicePing.name)\\\" color=\\\"primary\\\">Keep</ion-button>\\n        <ion-button (click)=\\\"freshDevice()\\\" color=\\\"primary\\\">Start New</ion-button>\\n      </div>\\n      <div *ngIf=\\\"devicePing.isNew\\\">\\n         This is a new device device, please set name for the device\\n\\n         <ion-item>\\n            <ion-input [(ngModel)]=\\\"devicePing.name\\\" required type=\\\"text\\\" placeholder=\\\"Device Name..\\\"></ion-input>\\n            <ion-button (click)=\\\"setDeviceName(devicePing.name)\\\" color=\\\"primary\\\">Set Name</ion-button>\\n          </ion-item>\\n      </div>\\n\\n  </div>\\n  <div *ngIf=\\\"mode === 'scan'\\\">\\n    <div *ngIf=\\\"isScanningDevice\\\">\\n\\n      Turn on Access point on your device and connect to the wifi network.\\n      <br/> Network name like xSmart-XXXXXX should show up on your phone.\\n      <br/> Connect to the network with password : 123456789\\n      <br/> Waiting to connect to wifi network\\n      <br/>\\n      <ion-spinner></ion-spinner>\\n    </div>\\n\\n    <div *ngIf=\\\"xSmartConnect\\\">\\n      {{devicePing.webid}}\\n      <br/> \\n      {{devicePing.chip}}\\n      <br/>\\n      {{devicePing.name}}\\n      <br/>\\n      <ion-button (click)=\\\"scanWifi()\\\" color=\\\"primary\\\">Scan Wifi Networks</ion-button>\\n      <Br/>\\n      <ion-list *ngFor=\\\"let wifi of wifinetworks\\\">\\n        <ion-item (click)=\\\"askWifiPassword(wifi)\\\">\\n          <ion-avatar slot=\\\"start\\\">\\n            <ion-icon slot=\\\"start\\\" name=\\\"wifi\\\"></ion-icon>\\n          </ion-avatar>\\n          <ion-label>\\n            <h2>{{wifi.SSID}}</h2>\\n            <div>\\n              {{wifi.RSSI}} -- {{wifi.ENC}}\\n            </div>\\n          </ion-label>\\n        </ion-item>\\n      </ion-list>\\n    </div>\\n\\n\\n  </div>\\n\\n</ion-content>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { AlertController } from '@ionic/angular';\n\nimport { ApiService } from \"../api/api.service\";\nimport { DeviceService } from \"../api/device.service\"\nimport { NotifyService } from \"../api/notify.service\";\nimport { Ping, Wifi, Device, Switch } from \"../api/api\"\n\n\nlet socket = null;\n\nlet wifiCheckInterval = null;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss']\n})\nexport class HomePage implements OnInit {\n\n  message: String = \"test\";\n  xSmartConnect: boolean = false;\n  wifinetworks: Wifi[] = [];\n  devicePing: Ping;\n  devices: Device[] = [];\n  isScanningDevice: boolean = false;\n  mode: String = \"device\";\n  isSocketConnected: boolean = false;\n  // mode show in which state the mobile app is \n  // 1. device (i.e it will show list of devices if any)\n  // 2. scan ( i.e scan for devices )\n  // 3. discovery ( i.e new device found )\n\n  constructor(\n    private platform: Platform,\n    private http: HttpClient,\n    private api: ApiService,\n    public alertController: AlertController,\n    private deviceService: DeviceService,\n    private notifyService: NotifyService) { }\n\n  ngOnInit() {\n    this.platform.ready().then(() => {\n      this.message = \"platform ready\";\n      // this.keepCheckingWifiConnected();\n      this.checkExistingDevice();\n    });\n  }\n  sendMessageToSocket(msg) {\n    if (this.isSocketConnected) {\n      console.log(\"socket msg send to\", msg);\n      socket.send(JSON.stringify(msg));\n\n    } else {\n      socket = new WebSocket('ws://5.9.144.226:9030');\n      // Connection opened\n      socket.addEventListener('open', (event) => {\n        console.log(\"socket connected\");\n        this.isSocketConnected = true;\n        socket.send(JSON.stringify(msg));\n      });\n\n      socket.addEventListener('close', () => {\n        console.log(\"socket closed\");\n        this.isSocketConnected = false;\n      });\n\n      // Listen for messages\n      socket.addEventListener('message', async (event) => {\n\n        let res = JSON.parse(event.data);\n        console.log('Message from server ', res);\n        if (res.type === \"device_online_check_reply\") {\n          this.updateDeviceStatus(res);\n        } else if (res.type === \"device_pin_oper_reply\") {\n          this.notifyService.alertUser(\"operation sent to device\");\n        } else if (res.type === \"device_io_notify\") {\n          await this.deviceService.updateDevicePin(res.pin, res.status, res.chip);\n          this.devices = await this.deviceService.getDevices();\n          this.notifyService.alertUser(\"device performed the action!\");\n        }\n      });\n    }\n  }\n  async switchOff(s: Switch, d: Device) {\n    this.sendMessageToSocket({\n      type: \"device_pin_oper\",\n      chip: d.chip,\n      pin: s.pin,\n      status: 0,\n      app_id: await this.deviceService.getAppID()\n    })\n  }\n  async switchOn(s: Switch, d: Device) {\n    this.sendMessageToSocket({\n      type: \"device_pin_oper\",\n      chip: d.chip,\n      pin: s.pin,\n      status: 1,\n      app_id: await this.deviceService.getAppID()\n    })\n  }\n  async updateDeviceStatus(data) {\n    if (data.found) {\n      await this.deviceService.updateDevice(data);\n    } else {\n      await this.deviceService.updateDeviceNotFound(data);\n    }\n    this.devices = await this.deviceService.getDevices();\n  }\n  async checkExistingDevice() {\n    this.devices = await this.deviceService.getDevices();\n    if (this.devices.length > 0) {\n      this.keepCheckingDeviceOnline();\n    }\n  }\n  trackByDevice(device: Device) {\n    return device.chip;\n  }\n  trackBySwitch(s: Switch) {\n    return s.pin;\n  }\n  async deleteDevice(device: Device) {\n    this.deviceService.deleteDevice(device);\n    this.checkExistingDevice();\n  }\n  scanDevice() {\n    this.mode = \"scan\";\n    this.isScanningDevice = true;\n    this.wifinetworks = [];\n    this.devicePing = {\n      name: \"\",\n      chip: \"\",\n      webid: \"\",\n      isNew: false\n    }\n    this.keepCheckingWifiConnected();\n  }\n  keepCheckingWifiConnected() {\n    if (wifiCheckInterval)\n      clearInterval(wifiCheckInterval);\n    wifiCheckInterval = setInterval(async () => {\n      try {\n        this.devicePing = await this.api.checkPing();\n        if (this.devicePing.name.length > 0) {\n          this.devicePing.isNew = false;\n        } else {\n          this.devicePing.isNew = true;\n        }\n        console.log(this.devicePing);\n        this.isScanningDevice = false;\n        clearInterval(wifiCheckInterval);\n        this.mode = \"discovery\";\n      } catch (e) {\n        console.log(e)\n        this.isScanningDevice = true;\n        // this.xSmartConnect = false;\n      }\n    }, 1000);\n  }\n  async freshDevice() {\n    this.devicePing.name = \"\";\n    this.devicePing.isNew = true;\n  }\n  async setDeviceName(name: String) {\n    try {\n      await this.api.setDeviceNickName(name);\n      if (!await this.deviceService.checkDeviceExists(this.devicePing.chip)) {\n        let newdevice: Device = {\n          name: name,\n          device_id: this.devicePing.webid,\n          chip: this.devicePing.chip,\n          ttl: 0,\n          online: false,\n          switches: []\n        };\n        this.deviceService.addDevice(newdevice);\n      }\n      this.mode = \"scan\";\n      this.xSmartConnect = true;\n      this.scanWifi();\n    } catch (e) {\n      console.log(e);\n      this.notifyService.alertUser(\"failed to set device name\");\n    }\n  }\n\n  async scanWifi() {\n    try {\n      this.wifinetworks = await this.api.getScanWifi();\n      console.log(this.wifinetworks);\n    } catch (e) {\n      console.log(e)\n      this.isScanningDevice = true;\n    }\n  }\n  async pingDevices() {\n    this.devices.forEach(async (device) => {\n      this.sendMessageToSocket({\n        type: \"device_online_check\",\n        chip: device.chip,\n        app_id: await this.deviceService.getAppID()\n      });\n    });\n  }\n  async keepCheckingDeviceOnline() {\n    setTimeout(async () => {\n      this.pingDevices();\n      console.log(this.isSocketConnected);\n      this.keepCheckingDeviceOnline();  \n    }, this.isSocketConnected ? 1000 * 60 : 1000); ////this so high because, when device does a ping, we automatically listen to it\n  }\n  async askWifiPassword(wifi) {\n    const alert = await this.alertController.create({\n      header: 'Enter Wifi Password',\n      inputs: [\n        {\n          name: 'password',\n          type: 'text',\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary'\n        }, {\n          text: 'Ok',\n          handler: async (data) => {\n            console.log('Confirm Ok')\n            console.log(data.password);\n            console.log(wifi.SSID);\n            try {\n              await this.api.setWifiPassword(wifi.SSID, data.password);\n            } catch (e) {\n              console.log(e);\n            }\n            this.keepCheckingDeviceOnline();\n            this.mode = \"device\";\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs.router.module';\n\nimport { TabsPage } from './tabs.page';\nimport { ContactPageModule } from '../contact/contact.module';\nimport { AboutPageModule } from '../about/about.module';\nimport { HomePageModule } from '../home/home.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule,\n    HomePageModule,\n    AboutPageModule,\n    ContactPageModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n","module.exports = \"<ion-tabs>\\n  <ion-tab label=\\\"Home\\\" icon=\\\"home\\\" href=\\\"/tabs/(home:home)\\\">\\n    <ion-router-outlet name=\\\"home\\\"></ion-router-outlet>\\n  </ion-tab>\\n  <ion-tab label=\\\"About\\\" icon=\\\"information-circle\\\" href=\\\"/tabs/(about:about)\\\">\\n    <ion-router-outlet name=\\\"about\\\"></ion-router-outlet>\\n  </ion-tab>\\n  <ion-tab label=\\\"Contact\\\" icon=\\\"contacts\\\" href=\\\"/tabs/(contact:contact)\\\">\\n    <ion-router-outlet name=\\\"contact\\\"></ion-router-outlet>\\n  </ion-tab>\\n</ion-tabs>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { TabsPage } from './tabs.page';\nimport { HomePage } from '../home/home.page';\nimport { AboutPage } from '../about/about.page';\nimport { ContactPage } from '../contact/contact.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'home',\n        outlet: 'home',\n        component: HomePage\n      },\n      {\n        path: 'about',\n        outlet: 'about',\n        component: AboutPage\n      },\n      {\n        path: 'contact',\n        outlet: 'contact',\n        component: ContactPage\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/tabs/(home:home)',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n"],"sourceRoot":""}